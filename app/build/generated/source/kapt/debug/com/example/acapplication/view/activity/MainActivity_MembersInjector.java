// Generated by Dagger (https://dagger.dev).
package com.example.acapplication.view.activity;

import com.example.acapplication.viewmodel.viewmodelfactory.DailyDetailsViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<DailyDetailsViewModelFactory> dailyDetailsViewModelFactoryProvider;

  public MainActivity_MembersInjector(
      Provider<DailyDetailsViewModelFactory> dailyDetailsViewModelFactoryProvider) {
    this.dailyDetailsViewModelFactoryProvider = dailyDetailsViewModelFactoryProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<DailyDetailsViewModelFactory> dailyDetailsViewModelFactoryProvider) {
    return new MainActivity_MembersInjector(dailyDetailsViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectDailyDetailsViewModelFactory(instance, dailyDetailsViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.acapplication.view.activity.MainActivity.dailyDetailsViewModelFactory")
  public static void injectDailyDetailsViewModelFactory(MainActivity instance,
      DailyDetailsViewModelFactory dailyDetailsViewModelFactory) {
    instance.dailyDetailsViewModelFactory = dailyDetailsViewModelFactory;
  }
}
