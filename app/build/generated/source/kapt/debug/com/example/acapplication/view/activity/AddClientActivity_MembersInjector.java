// Generated by Dagger (https://dagger.dev).
package com.example.acapplication.view.activity;

import com.example.acapplication.viewmodel.viewmodelfactory.ClientViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddClientActivity_MembersInjector implements MembersInjector<AddClientActivity> {
  private final Provider<ClientViewModelFactory> clientViewModelFactoryProvider;

  public AddClientActivity_MembersInjector(
      Provider<ClientViewModelFactory> clientViewModelFactoryProvider) {
    this.clientViewModelFactoryProvider = clientViewModelFactoryProvider;
  }

  public static MembersInjector<AddClientActivity> create(
      Provider<ClientViewModelFactory> clientViewModelFactoryProvider) {
    return new AddClientActivity_MembersInjector(clientViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(AddClientActivity instance) {
    injectClientViewModelFactory(instance, clientViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.acapplication.view.activity.AddClientActivity.clientViewModelFactory")
  public static void injectClientViewModelFactory(AddClientActivity instance,
      ClientViewModelFactory clientViewModelFactory) {
    instance.clientViewModelFactory = clientViewModelFactory;
  }
}
