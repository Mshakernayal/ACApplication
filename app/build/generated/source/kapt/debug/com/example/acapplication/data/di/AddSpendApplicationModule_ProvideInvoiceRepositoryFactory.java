// Generated by Dagger (https://dagger.dev).
package com.example.acapplication.data.di;

import com.example.acapplication.model.database.AcDataBase;
import com.example.acapplication.repository.InvoiceRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddSpendApplicationModule_ProvideInvoiceRepositoryFactory implements Factory<InvoiceRepository> {
  private final Provider<AcDataBase> dataBaseProvider;

  public AddSpendApplicationModule_ProvideInvoiceRepositoryFactory(
      Provider<AcDataBase> dataBaseProvider) {
    this.dataBaseProvider = dataBaseProvider;
  }

  @Override
  public InvoiceRepository get() {
    return provideInvoiceRepository(dataBaseProvider.get());
  }

  public static AddSpendApplicationModule_ProvideInvoiceRepositoryFactory create(
      Provider<AcDataBase> dataBaseProvider) {
    return new AddSpendApplicationModule_ProvideInvoiceRepositoryFactory(dataBaseProvider);
  }

  public static InvoiceRepository provideInvoiceRepository(AcDataBase dataBase) {
    return Preconditions.checkNotNullFromProvides(AddSpendApplicationModule.INSTANCE.provideInvoiceRepository(dataBase));
  }
}
