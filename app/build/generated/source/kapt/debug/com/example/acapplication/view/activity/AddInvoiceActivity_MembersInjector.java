// Generated by Dagger (https://dagger.dev).
package com.example.acapplication.view.activity;

import com.example.acapplication.viewmodel.viewmodelfactory.InvoiceViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddInvoiceActivity_MembersInjector implements MembersInjector<AddInvoiceActivity> {
  private final Provider<InvoiceViewModelFactory> invoiceViewModelFactoryProvider;

  public AddInvoiceActivity_MembersInjector(
      Provider<InvoiceViewModelFactory> invoiceViewModelFactoryProvider) {
    this.invoiceViewModelFactoryProvider = invoiceViewModelFactoryProvider;
  }

  public static MembersInjector<AddInvoiceActivity> create(
      Provider<InvoiceViewModelFactory> invoiceViewModelFactoryProvider) {
    return new AddInvoiceActivity_MembersInjector(invoiceViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(AddInvoiceActivity instance) {
    injectInvoiceViewModelFactory(instance, invoiceViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.acapplication.view.activity.AddInvoiceActivity.invoiceViewModelFactory")
  public static void injectInvoiceViewModelFactory(AddInvoiceActivity instance,
      InvoiceViewModelFactory invoiceViewModelFactory) {
    instance.invoiceViewModelFactory = invoiceViewModelFactory;
  }
}
