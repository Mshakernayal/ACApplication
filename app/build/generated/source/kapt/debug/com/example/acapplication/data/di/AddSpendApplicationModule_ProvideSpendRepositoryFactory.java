// Generated by Dagger (https://dagger.dev).
package com.example.acapplication.data.di;

import com.example.acapplication.model.database.AcDataBase;
import com.example.acapplication.repository.SpendRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddSpendApplicationModule_ProvideSpendRepositoryFactory implements Factory<SpendRepository> {
  private final Provider<AcDataBase> dataBaseProvider;

  public AddSpendApplicationModule_ProvideSpendRepositoryFactory(
      Provider<AcDataBase> dataBaseProvider) {
    this.dataBaseProvider = dataBaseProvider;
  }

  @Override
  public SpendRepository get() {
    return provideSpendRepository(dataBaseProvider.get());
  }

  public static AddSpendApplicationModule_ProvideSpendRepositoryFactory create(
      Provider<AcDataBase> dataBaseProvider) {
    return new AddSpendApplicationModule_ProvideSpendRepositoryFactory(dataBaseProvider);
  }

  public static SpendRepository provideSpendRepository(AcDataBase dataBase) {
    return Preconditions.checkNotNullFromProvides(AddSpendApplicationModule.INSTANCE.provideSpendRepository(dataBase));
  }
}
